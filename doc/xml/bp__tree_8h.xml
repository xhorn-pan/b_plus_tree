<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="bp__tree_8h" kind="file" language="C++">
    <compoundname>bp_tree.h</compoundname>
    <includes refid="rb__tree_8h" local="yes">rb_tree.h</includes>
    <includes local="no">future</includes>
    <includes local="no">iostream</includes>
    <includes local="no">vector</includes>
    <includes local="no">fstream</includes>
    <includedby refid="bp__main_8cc" local="yes">bp_main.cc</includedby>
    <includedby refid="main_8cc" local="yes">main.cc</includedby>
    <incdepgraph>
      <node id="12">
        <label>bp_tree.h</label>
        <link refid="bp__tree_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>cassert</label>
      </node>
      <node id="19">
        <label>fstream</label>
      </node>
      <node id="18">
        <label>future</label>
      </node>
      <node id="16">
        <label>vector</label>
      </node>
      <node id="13">
        <label>rb_tree.h</label>
        <link refid="rb__tree_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>iostream</label>
      </node>
      <node id="17">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="22">
        <label>main.cc</label>
        <link refid="main_8cc"/>
      </node>
      <node id="20">
        <label>bp_tree.h</label>
        <link refid="bp__tree_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>bp_main.cc</label>
        <link refid="bp__main_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classcop5536_1_1bp__node" prot="public">cop5536::bp_node</innerclass>
    <innerclass refid="classcop5536_1_1bp__node__i" prot="public">cop5536::bp_node_i</innerclass>
    <innerclass refid="classcop5536_1_1bp__node__l" prot="public">cop5536::bp_node_l</innerclass>
    <innerclass refid="classcop5536_1_1bp__tree" prot="public">cop5536::bp_tree</innerclass>
    <innernamespace refid="namespacecop5536">cop5536</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="bp__tree_8h_1a61a3c9a18380aafb6e430e79bf596557" prot="public" static="no">
        <name>OUTPUT</name>
        <initializer>&quot;output_file.txt&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="bp_tree.h" line="9" column="9" bodyfile="bp_tree.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>BP_TREE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BP_TREE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rb__tree_8h" kindref="compound">rb_tree.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;future&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="bp__tree_8h_1a61a3c9a18380aafb6e430e79bf596557" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OUTPUT<sp/>&quot;output_file.txt&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="namespacecop5536" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecop5536" kindref="compound">cop5536</ref><sp/>{</highlight></codeline>
<codeline lineno="12" refid="classcop5536_1_1bp__node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcop5536_1_1bp__node" kindref="compound">bp_node</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14" refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref>;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>keys<sp/>in<sp/>rb_tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>public:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classcop5536_1_1bp__node_1ac2b250a3d444029d56ab3bf824058f0e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcop5536_1_1bp__node_1ac2b250a3d444029d56ab3bf824058f0e" kindref="member">bp_node</ref>()<sp/>:<sp/><ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref>(0){};</highlight></codeline>
<codeline lineno="17" refid="classcop5536_1_1bp__node_1a317da750875d22031d8eaadce6f8d934" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node_1a317da750875d22031d8eaadce6f8d934" kindref="member">bp_node</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>ns)<sp/>:<sp/><ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref>(ns){};</highlight></codeline>
<codeline lineno="18" refid="classcop5536_1_1bp__node_1a0550a89be2909f9765f2db2598ed8f34" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node_1a0550a89be2909f9765f2db2598ed8f34" kindref="member">~bp_node</ref>(){};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node_1aa65afc4e5d7eaef471fce7e115a20b8f" kindref="member">destory_</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node_1a6f12a3668cc105cc1e7d87e1debafa82" kindref="member">print</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node_1ac0b53957714577d62b9452b8b5611182" kindref="member">is_leaf</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="22" refid="classcop5536_1_1bp__node_1ae7815123263e3baf4f1fb7e87775fe02" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node_1ae7815123263e3baf4f1fb7e87775fe02" kindref="member">is_full</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>degree)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;node_size<sp/>&gt;=<sp/>degree;<sp/>};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node_1a0f2a0e453f61fdd8965329ecd00f9cd3" kindref="member">search</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;*<sp/><ref refid="classcop5536_1_1bp__node_1a0f2a0e453f61fdd8965329ecd00f9cd3" kindref="member">search</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>low,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>high)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node_1af3e0eedf3446b6f881f334cc57d42c05" kindref="member">remove</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="27" refid="classcop5536_1_1bp__node_1a90a56c05435eaed29592ccea0e8333b0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node_1a90a56c05435eaed29592ccea0e8333b0" kindref="member">splitable</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;node_size<sp/>&gt;=<sp/>2;};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref>*<sp/><ref refid="classcop5536_1_1bp__node_1a8db819103997a6e80e0f00558f596d07" kindref="member">split</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_left)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>virtual<sp/>void<sp/>split();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node *&gt;</ref>*<sp/><ref refid="classcop5536_1_1bp__node_1afd68a9ff9b101e8f21d8a341827f4aad" kindref="member">insert_</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>degree)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>internal<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classcop5536_1_1bp__node__i" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcop5536_1_1bp__node__i" kindref="compound">bp_node_i</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node" kindref="compound">bp_node</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="classcop5536_1_1bp__node__i_1a0f3850c5f6d1f1ea47091d0c98ca979a" kindref="member">bp_node_i</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//:<sp/>bp_node&lt;int,<sp/>bp_node&lt;int,<sp/>float&gt;&gt;(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//first_child(nullptr),<sp/>children(nullptr)<sp/>{};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classcop5536_1_1bp__node__i_1a7ec49beba718f9d0f2fa10eaf52f1c7a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__i_1a7ec49beba718f9d0f2fa10eaf52f1c7a" kindref="member">bp_node_i</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>ns,<sp/><ref refid="classcop5536_1_1bp__node" kindref="compound">bp_node</ref><sp/>*fc,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1rb__tree" kindref="compound">rb_tree&lt;int, bp_node *&gt;</ref><sp/>*<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcop5536_1_1bp__node" kindref="compound">bp_node</ref>(ns),<sp/><ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>(fc),<sp/><ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>(<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>){};</highlight></codeline>
<codeline lineno="43" refid="classcop5536_1_1bp__node__i_1a44b690fdd0f974a3b3520c0c222afb97" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__i_1a44b690fdd0f974a3b3520c0c222afb97" kindref="member">~bp_node_i</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a326dcd8a485264d4154c567dbe4ac804" kindref="member">destory_</ref>();};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__i_1a326dcd8a485264d4154c567dbe4ac804" kindref="member">destory_</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__i_1a57d4700fe3de996b564bde81197907f2" kindref="member">print</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46" refid="classcop5536_1_1bp__node__i_1a9d62d2e8e5b34abcb47aa2f17e1cbd99" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__i_1a9d62d2e8e5b34abcb47aa2f17e1cbd99" kindref="member">is_leaf</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__i_1ac3d6bfcfb39e3030b523f8276f19bec9" kindref="member">search</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;*<sp/><ref refid="classcop5536_1_1bp__node__i_1ac3d6bfcfb39e3030b523f8276f19bec9" kindref="member">search</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>low,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>high)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__i_1a4549e4be7010c1a6080a3dd6df4f52e0" kindref="member">remove</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref>*<sp/><ref refid="classcop5536_1_1bp__node__i_1a6610fa235f6f5f88c1189c7a340cc666" kindref="member">split</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_left)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref>*<sp/><ref refid="classcop5536_1_1bp__node__i_1a63a9361ef291e491b35eb5df49f67bce" kindref="member">insert_</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>degree)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53" refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcop5536_1_1bp__node" kindref="compound">bp_node</ref>*<sp/><ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>to<sp/>subtree<sp/>with<sp/>smallest<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcop5536_1_1rb__tree" kindref="compound">rb_tree&lt;int, bp_node*&gt;</ref><sp/>*<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>;<sp/></highlight><highlight class="comment">//<sp/>all<sp/>other<sp/>children,<sp/>in<sp/>a<sp/>red<sp/>black<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>leaf<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classcop5536_1_1bp__node__l" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcop5536_1_1bp__node__l" kindref="compound">bp_node_l</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node" kindref="compound">bp_node</ref><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60" refid="classcop5536_1_1bp__node__l_1a6ffb52ac4bec5ddc89cce27a1d218fd4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcop5536_1_1bp__node__l_1a6ffb52ac4bec5ddc89cce27a1d218fd4" kindref="member">bp_node_l</ref>()<sp/>:<sp/><ref refid="classcop5536_1_1bp__node" kindref="compound">bp_node</ref>(),<sp/><ref refid="classcop5536_1_1bp__node__l_1a24a25b19ac46487f9654089e96fae604" kindref="member">data</ref>(nullptr){};<sp/></highlight><highlight class="comment">//<sp/>,<sp/>next(nullptr),<sp/>prev(nullptr){};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classcop5536_1_1bp__node__l_1a14d78ee51c1a822dc78799110ec05a0a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__l_1a14d78ee51c1a822dc78799110ec05a0a" kindref="member">bp_node_l</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>ns,<sp/><ref refid="classcop5536_1_1rb__tree" kindref="compound">rb_tree&lt;int, float&gt;</ref><sp/>*ds)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcop5536_1_1bp__node" kindref="compound">bp_node</ref>(ns),<sp/><ref refid="classcop5536_1_1bp__node__l_1a24a25b19ac46487f9654089e96fae604" kindref="member">data</ref>(ds){};<sp/></highlight><highlight class="comment">//,<sp/>next(nullptr),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>prev(nullptr){};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__l_1a12982ece3c311e3ccf653a97d842f39f" kindref="member">print</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65" refid="classcop5536_1_1bp__node__l_1a6e416d787a2fd3d236939b9ce44bed03" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__l_1a6e416d787a2fd3d236939b9ce44bed03" kindref="member">is_leaf</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>insert(int<sp/>key,<sp/>float<sp/>value)<sp/>override;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__l_1aaef458660fc157dbe47705075a2ea49f" kindref="member">search</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;*<sp/><ref refid="classcop5536_1_1bp__node__l_1aaef458660fc157dbe47705075a2ea49f" kindref="member">search</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>low,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>high)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69" refid="classcop5536_1_1bp__node__l_1aeb42caefa39b462bb7fae5c7227f9280" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__l_1aeb42caefa39b462bb7fae5c7227f9280" kindref="member">~bp_node_l</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__l_1aa8cba478b36eb85737d4e769387ddc5f" kindref="member">destory_</ref>();};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__l_1aa8cba478b36eb85737d4e769387ddc5f" kindref="member">destory_</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__l_1a23c01342ecfd1430bbbbed3be25d8407" kindref="member">remove</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref>*<sp/><ref refid="classcop5536_1_1bp__node__l_1abdd4a62184d0220ef5904db44bff31fc" kindref="member">split</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_left)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref>*<sp/><ref refid="classcop5536_1_1bp__node__l_1ab551cc0e4af968e84b9661c264fd1ece" kindref="member">insert_</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>degree)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75" refid="classcop5536_1_1bp__node__l_1a24a25b19ac46487f9654089e96fae604" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcop5536_1_1rb__tree" kindref="compound">rb_tree&lt;int, float&gt;</ref><sp/>*<ref refid="classcop5536_1_1bp__node__l_1a24a25b19ac46487f9654089e96fae604" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>B<sp/>plus<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classcop5536_1_1bp__tree" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcop5536_1_1bp__tree" kindref="compound">bp_tree</ref><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81" refid="classcop5536_1_1bp__tree_1a8f2aa475cf2dccb634015fb983fe8b33" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcop5536_1_1bp__tree_1a8f2aa475cf2dccb634015fb983fe8b33" kindref="member">bp_tree</ref>(){};</highlight></codeline>
<codeline lineno="82" refid="classcop5536_1_1bp__tree_1af238ca743991e869f91e940f34da5090" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__tree_1af238ca743991e869f91e940f34da5090" kindref="member">bp_tree</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(m<sp/>&gt;<sp/>2);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>degree<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>root<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1bp__tree_1aedfc108a47c4c0fccba58e0fbe4afc85" kindref="member">open_output</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="88" refid="classcop5536_1_1bp__tree_1a411c9b8fe2d574fd544c45ab1556f9d5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcop5536_1_1bp__tree_1a411c9b8fe2d574fd544c45ab1556f9d5" kindref="member">~bp_tree</ref>(){</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1bp__tree_1ada822d6bb72e15c4ba6f9c2848fb883c" kindref="member">close_output</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>root;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__tree_1a244ebb31e046d28bc2a765d1215c98ac" kindref="member">insert</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__tree_1ab19cba7e122848174579357585b43cb4" kindref="member">search</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__tree_1ab19cba7e122848174579357585b43cb4" kindref="member">search</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>low,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>high);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__tree_1a424febb6a1d7ce333d8713f43d9462a5" kindref="member">remove</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__tree_1a5098bb9c72750e80252595a707ad2470" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="97" refid="classcop5536_1_1bp__tree_1aedfc108a47c4c0fccba58e0fbe4afc85" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__tree_1aedfc108a47c4c0fccba58e0fbe4afc85" kindref="member">open_output</ref>()<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>output.open(<ref refid="bp__tree_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref>,<sp/>std::ios::out<sp/>|<sp/>std::ios::trunc);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="100" refid="classcop5536_1_1bp__tree_1ada822d6bb72e15c4ba6f9c2848fb883c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__tree_1ada822d6bb72e15c4ba6f9c2848fb883c" kindref="member">close_output</ref>()<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>output.close();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>std::ofstream<sp/>output;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>degree;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="classcop5536_1_1bp__node" kindref="compound">bp_node</ref><sp/>*root;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classcop5536_1_1bp__node__l_1aa8cba478b36eb85737d4e769387ddc5f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__l_1aa8cba478b36eb85737d4e769387ddc5f" kindref="member">bp_node_l::destory_</ref>()<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__l_1a24a25b19ac46487f9654089e96fae604" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112" refid="classcop5536_1_1bp__node__i_1a326dcd8a485264d4154c567dbe4ac804" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__i_1a326dcd8a485264d4154c567dbe4ac804" kindref="member">bp_node_i::destory_</ref>()<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>-&gt;<ref refid="classcop5536_1_1bp__node_1ac0b53957714577d62b9452b8b5611182" kindref="member">is_leaf</ref>())<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>-&gt;<ref refid="classcop5536_1_1bp__node_1aa65afc4e5d7eaef471fce7e115a20b8f" kindref="member">destory_</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;nth(0);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it-&gt;data-&gt;is_leaf())<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>it-&gt;data;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;data-&gt;destory_();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;data<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;next_(it);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133" refid="classcop5536_1_1bp__tree_1a244ebb31e046d28bc2a765d1215c98ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__tree_1a244ebb31e046d28bc2a765d1215c98ac" kindref="member">bp_tree::insert</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1rb__tree" kindref="compound">rb_tree&lt;int, float&gt;</ref><sp/>*rb_i<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1rb__tree" kindref="compound">rb_tree&lt;int, float&gt;</ref>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>rb_i-&gt;<ref refid="classcop5536_1_1rb__tree_1af6623f271ebac00dd2b9dc525a21f04b" kindref="member">insert</ref>(key,<sp/>value);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1bp__node__l" kindref="compound">bp_node_l</ref><sp/>*bp_l<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__l" kindref="compound">bp_node_l</ref>(2,<sp/>rb_i);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>root<sp/>=<sp/>bp_l;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root-&gt;<ref refid="classcop5536_1_1bp__node_1ac0b53957714577d62b9452b8b5611182" kindref="member">is_leaf</ref>())<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node *&gt;</ref><sp/>*n_bp_i_node<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>the<sp/>function<sp/>of<sp/>real<sp/>insert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>std::future&lt;rb_tree_node&lt;int,<sp/>bp_node<sp/>*&gt;<sp/>*&gt;<sp/>fu<sp/>=</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::async(std::launch::async,<sp/>&amp;<ref refid="classcop5536_1_1bp__node_1afd68a9ff9b101e8f21d8a341827f4aad" kindref="member">bp_node::insert_</ref>,<sp/>this-&gt;root,<sp/>key,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,<sp/>this-&gt;degree);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>n_bp_i_node<sp/>=<sp/>fu.get();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_bp_i_node)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>new<sp/>bp<sp/>internal<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1rb__tree" kindref="compound">rb_tree&lt;int, bp_node*&gt;</ref>*<sp/>new_root_data<sp/>=</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1rb__tree" kindref="compound">rb_tree&lt;int, bp_node*&gt;</ref>(n_bp_i_node);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1bp__node__i" kindref="compound">bp_node_i</ref>*<sp/>new_root<sp/>=</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__i" kindref="compound">bp_node_i</ref>(2,<sp/>root,<sp/>new_root_data);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>root<sp/>=<sp/>new_root;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1bp__node__i" kindref="compound">bp_node_i</ref>*<sp/>i_node<sp/>=<sp/>static_cast&lt;bp_node_i*&gt;(root);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref>*<sp/>ins_to<sp/>=<sp/>i_node-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;search_eq_or_gt(key);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1bp__node" kindref="compound">bp_node</ref>*<sp/>key_node;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1aa976b5b194ebbd5d0a1542febc9578aa" kindref="member">key</ref><sp/>&gt;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>key_node<sp/>=<sp/>i_node-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ins_to-&gt;data<sp/>=<sp/>i_node-&gt;first_child;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>key_node<sp/>=<sp/>ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1a75876fa1d1523c169440561c015767cf" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node *&gt;</ref><sp/>*n_bp_i_node<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>the<sp/>function<sp/>of<sp/>real<sp/>insert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>std::future&lt;rb_tree_node&lt;int,<sp/>bp_node<sp/>*&gt;<sp/>*&gt;<sp/>fu<sp/>=</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::async(std::launch::async,<sp/>&amp;<ref refid="classcop5536_1_1bp__node_1afd68a9ff9b101e8f21d8a341827f4aad" kindref="member">bp_node::insert_</ref>,<sp/>key_node,<sp/>key,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,<sp/>this-&gt;degree);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>n_bp_i_node<sp/>=<sp/>fu.get();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_bp_i_node)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i_node-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;insert_(n_bp_i_node))<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i_node-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(degree<sp/>&lt;<sp/>i_node-&gt;node_size)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rp_<sp/>=<sp/>i_node-&gt;<ref refid="classcop5536_1_1bp__node__i_1a6610fa235f6f5f88c1189c7a340cc666" kindref="member">split</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1rb__tree" kindref="compound">rb_tree&lt;int, bp_node*&gt;</ref>*<sp/>new_root_data<sp/>=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1rb__tree" kindref="compound">rb_tree&lt;int, bp_node*&gt;</ref>(rp_);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1bp__node__i" kindref="compound">bp_node_i</ref>*<sp/>new_root<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__i" kindref="compound">bp_node_i</ref>(2,<sp/>root,<sp/>new_root_data);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root<sp/>=<sp/>new_root;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="classcop5536_1_1bp__node__i_1a63a9361ef291e491b35eb5df49f67bce" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node *&gt;</ref><sp/>*<ref refid="classcop5536_1_1bp__node__i_1a63a9361ef291e491b35eb5df49f67bce" kindref="member">bp_node_i::insert_</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>degree)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref><sp/>*ins_to<sp/>=<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;search_eq_or_gt(key);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="classcop5536_1_1bp__node" kindref="compound">bp_node</ref>*<sp/>key_node;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1aa976b5b194ebbd5d0a1542febc9578aa" kindref="member">key</ref><sp/>&gt;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>key_node<sp/>=<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>key_node<sp/>=<sp/>ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1a75876fa1d1523c169440561c015767cf" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node *&gt;</ref><sp/>*n_bp_i_node<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>the<sp/>function<sp/>of<sp/>real<sp/>insert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>std::future&lt;rb_tree_node&lt;int,<sp/>bp_node<sp/>*&gt;<sp/>*&gt;<sp/>fu<sp/>=<sp/>std::async(</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::launch::async,<sp/>&amp;<ref refid="classcop5536_1_1bp__node_1afd68a9ff9b101e8f21d8a341827f4aad" kindref="member">bp_node::insert_</ref>,<sp/>key_node,<sp/>key,<sp/>value,<sp/>degree);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>n_bp_i_node<sp/>=<sp/>fu.get();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_bp_i_node)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;insert_(n_bp_i_node))<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(degree<sp/>&lt;<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>split</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a6610fa235f6f5f88c1189c7a340cc666" kindref="member">split</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="classcop5536_1_1bp__node__l_1ab551cc0e4af968e84b9661c264fd1ece" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node *&gt;</ref><sp/>*<ref refid="classcop5536_1_1bp__node__l_1ab551cc0e4af968e84b9661c264fd1ece" kindref="member">bp_node_l::insert_</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>degree)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classcop5536_1_1bp__node__l_1a24a25b19ac46487f9654089e96fae604" kindref="member">data</ref>-&gt;<ref refid="classcop5536_1_1rb__tree_1af6623f271ebac00dd2b9dc525a21f04b" kindref="member">insert</ref>(key,<sp/>value))<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref><sp/>&gt;<sp/>degree)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>full<sp/>node<sp/>split;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__l_1abdd4a62184d0220ef5904db44bff31fc" kindref="member">split</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="classcop5536_1_1bp__node__l_1abdd4a62184d0220ef5904db44bff31fc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref>*<sp/><ref refid="classcop5536_1_1bp__node__l_1abdd4a62184d0220ef5904db44bff31fc" kindref="member">bp_node_l::split</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_left)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>does<sp/>not<sp/>matter<sp/>left<sp/>or<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><ref refid="classcop5536_1_1rb__tree" kindref="compound">rb_tree&lt;int, float&gt;</ref><sp/>*n_rb_node<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1rb__tree" kindref="compound">rb_tree&lt;int, float&gt;</ref>();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>l_before<sp/>=<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rp_<sp/>=<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__l_1a24a25b19ac46487f9654089e96fae604" kindref="member">data</ref>-&gt;<ref refid="classcop5536_1_1rb__tree_1a151086d7353f49ad234479f032bac486" kindref="member">split_</ref>(l_before/2<sp/>-<sp/>1,<sp/>n_rb_node);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref><sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_key<sp/>=<sp/>rp_-&gt;key;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>the<sp/>split<sp/>key<sp/>value<sp/>to<sp/>new<sp/>leaf<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>n_rb_node-&gt;<ref refid="classcop5536_1_1rb__tree_1af6623f271ebac00dd2b9dc525a21f04b" kindref="member">insert</ref>(rp_-&gt;key,<sp/>rp_-&gt;data);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>delete<sp/>rp_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>new<sp/>leaf<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><ref refid="classcop5536_1_1bp__node__l" kindref="compound">bp_node_l</ref>*<sp/>bp_l<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__l_1a6ffb52ac4bec5ddc89cce27a1d218fd4" kindref="member">bp_node_l</ref>(l_before/2+1,<sp/>n_rb_node);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>new<sp/>internal<sp/>bp<sp/>node,<sp/>for<sp/>insertion<sp/>to<sp/>its<sp/>parent<sp/>node;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref>*<sp/>n_bp_node<sp/>=</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref>(l_key,<sp/>bp_l);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n_bp_node;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="classcop5536_1_1bp__node__i_1a6610fa235f6f5f88c1189c7a340cc666" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref>*<sp/><ref refid="classcop5536_1_1bp__node__i_1a6610fa235f6f5f88c1189c7a340cc666" kindref="member">bp_node_i::split</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_left)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>know<sp/>from<sp/>left<sp/>or<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIX<sp/>ME,<sp/>splited<sp/>node<sp/>size_node<sp/>not<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>assert(this-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref><sp/>&gt;<sp/>2);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><ref refid="classcop5536_1_1rb__tree" kindref="compound">rb_tree&lt;int, bp_node*&gt;</ref><sp/>*n_rb_node<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1rb__tree" kindref="compound">rb_tree&lt;int, bp_node*&gt;</ref>();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>l_before<sp/>=<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rp_<sp/>=<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;split_(l_before/2<sp/>-<sp/>1,<sp/>n_rb_node);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_left)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1bp__node__i" kindref="compound">bp_node_i</ref>*<sp/>r_bp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__i_1a0f3850c5f6d1f1ea47091d0c98ca979a" kindref="member">bp_node_i</ref>(l_before/2,<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>,<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref>*<sp/>r_rb_node<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref>(rp_-&gt;key,<sp/>r_bp);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIX<sp/>ME<sp/>not<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref><sp/>=<sp/>rp_-&gt;data;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref><sp/>=<sp/>n_rb_node;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref><sp/>=<sp/>l_before/2;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r_rb_node;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1bp__node__i" kindref="compound">bp_node_i</ref>*<sp/>r_bp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__i_1a0f3850c5f6d1f1ea47091d0c98ca979a" kindref="member">bp_node_i</ref>(l_before/2,<sp/>rp_-&gt;data,<sp/>n_rb_node);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref>*<sp/>r_rb_node<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref>(rp_-&gt;key,<sp/>r_bp);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref><sp/>=<sp/>l_before/2;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r_rb_node;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="classcop5536_1_1bp__node__l_1a23c01342ecfd1430bbbbed3be25d8407" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__l_1a23c01342ecfd1430bbbbed3be25d8407" kindref="member">bp_node_l::remove</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="classcop5536_1_1bp__node__l_1a24a25b19ac46487f9654089e96fae604" kindref="member">data</ref>-&gt;<ref refid="classcop5536_1_1rb__tree_1a25a915e3c06cbfb3d09c3ffd4fb26f82" kindref="member">delete_key</ref>(key))<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref><sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref><sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="classcop5536_1_1bp__node__i_1a4549e4be7010c1a6080a3dd6df4f52e0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__i_1a4549e4be7010c1a6080a3dd6df4f52e0" kindref="member">bp_node_i::remove</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fxxx,<sp/>so<sp/>many<sp/>copy<sp/>and<sp/>paste</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref>*<sp/>ins_to<sp/>=<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;search_eq_or_gt(key);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="classcop5536_1_1bp__node" kindref="compound">bp_node</ref>*<sp/>key_node;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1aa976b5b194ebbd5d0a1542febc9578aa" kindref="member">key</ref><sp/>&gt;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>key_node<sp/>=<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>key_node<sp/>=<sp/>ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1a75876fa1d1523c169440561c015767cf" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deficient<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>std::future&lt;bool&gt;<sp/>fu<sp/>=<sp/>std::async(std::launch::async,<sp/>&amp;<ref refid="classcop5536_1_1bp__node_1af3e0eedf3446b6f881f334cc57d42c05" kindref="member">bp_node::remove</ref>,<sp/>key_node,<sp/>key);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>deficient<sp/>=<sp/>fu.get();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(deficient)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(key_node-&gt;<ref refid="classcop5536_1_1bp__node_1ac0b53957714577d62b9452b8b5611182" kindref="member">is_leaf</ref>())<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//empty<sp/>leaf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>sibling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key_node<sp/>==<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>-&gt;<ref refid="classcop5536_1_1bp__node_1ac0b53957714577d62b9452b8b5611182" kindref="member">is_leaf</ref>())<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rp_<sp/>=<sp/>ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1a75876fa1d1523c169440561c015767cf" kindref="member">data</ref>-&gt;split(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref><sp/>=<sp/>rp_-&gt;data;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1a75876fa1d1523c169440561c015767cf" kindref="member">data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1aa976b5b194ebbd5d0a1542febc9578aa" kindref="member">key</ref><sp/>=<sp/>rp_-&gt;key;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;delete_(ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1aa976b5b194ebbd5d0a1542febc9578aa" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>left<sp/>sibling<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1bp__node" kindref="compound">bp_node</ref>*<sp/>sibling;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref>*<sp/>sibling_rb_node<sp/>=<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;prev_(ins_to);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>sibling_rb_node)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling<sp/>=<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling<sp/>=<sp/>sibling_rb_node-&gt;data;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sibling-&gt;<ref refid="classcop5536_1_1bp__node_1a90a56c05435eaed29592ccea0e8333b0" kindref="member">splitable</ref>())<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>split<sp/>left<sp/>sibling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auto<sp/>rp_<sp/>=<sp/>sibling-&gt;split(true);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;insert_(sibling-&gt;<ref refid="classcop5536_1_1bp__node_1a8db819103997a6e80e0f00558f596d07" kindref="member">split</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>right<sp/>sibling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_rb_node<sp/>=<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;next_(ins_to);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sibling_rb_node)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling<sp/>=<sp/>sibling_rb_node-&gt;data;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sibling-&gt;<ref refid="classcop5536_1_1bp__node_1a90a56c05435eaed29592ccea0e8333b0" kindref="member">splitable</ref>())<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//split<sp/>right<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;insert_(sibling-&gt;<ref refid="classcop5536_1_1bp__node_1a8db819103997a6e80e0f00558f596d07" kindref="member">split</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>let<sp/>rb<sp/>tree<sp/>can<sp/>delete<sp/>node<sp/>without<sp/>search<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;delete_key(ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1aa976b5b194ebbd5d0a1542febc9578aa" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref><sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>deficient<sp/>index<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//internal<sp/>node,<sp/>only<sp/>first<sp/>child<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>sibling,<sp/>if<sp/>sibling<sp/>can<sp/>split,<sp/>split<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1bp__node__i" kindref="compound">bp_node_i</ref>*<sp/>i<sp/>=<sp/>static_cast&lt;bp_node_i*&gt;(key_node);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(key_node<sp/>==<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1a75876fa1d1523c169440561c015767cf" kindref="member">data</ref>-&gt;splitable())<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref>*<sp/>rp_<sp/>=<sp/>ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1a75876fa1d1523c169440561c015767cf" kindref="member">data</ref>-&gt;split(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1aa976b5b194ebbd5d0a1542febc9578aa" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1aa976b5b194ebbd5d0a1542febc9578aa" kindref="member">key</ref><sp/>=<sp/>rp_-&gt;<ref refid="structcop5536_1_1rb__tree__node_1aa976b5b194ebbd5d0a1542febc9578aa" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1bp__node__i" kindref="compound">bp_node_i</ref>*<sp/>rpi<sp/>=<sp/>static_cast&lt;bp_node_i*&gt;(rp_-&gt;<ref refid="structcop5536_1_1rb__tree__node_1a75876fa1d1523c169440561c015767cf" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref><sp/>=<sp/>rpi-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;insert(tmp,<sp/>rpi-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref><sp/>+=<sp/>rpi-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rpi-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rpi-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>rpi;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rp_-&gt;<ref refid="structcop5536_1_1rb__tree__node_1a75876fa1d1523c169440561c015767cf" kindref="member">data</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>rp_;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>sibling<sp/>can<sp/>not<sp/>split,<sp/>merge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1bp__node__i" kindref="compound">bp_node_i</ref>*<sp/>ins_data<sp/>=<sp/>static_cast&lt;bp_node_i*&gt;(ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1a75876fa1d1523c169440561c015767cf" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref><sp/>=<sp/>ins_data-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;insert(ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1aa976b5b194ebbd5d0a1542febc9578aa" kindref="member">key</ref>,<sp/>ins_data-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref><sp/>+=<sp/>ins_data-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ins_data-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ins_data-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>ins_data;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1a75876fa1d1523c169440561c015767cf" kindref="member">data</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>rewrite<sp/>when<sp/>rb<sp/>tree<sp/>can<sp/>delete<sp/>by<sp/>node<sp/>addr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;delete_key(ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1aa976b5b194ebbd5d0a1542febc9578aa" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>this-&gt;children<sp/>==<sp/>nullptr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1bp__node" kindref="compound">bp_node</ref><sp/>*sibling_l;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref>*<sp/>sibling_rb_node_l<sp/>=<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;prev_(ins_to);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>sibling_rb_node_l)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_l<sp/>=<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_l<sp/>=<sp/>sibling_rb_node_l-&gt;data;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sibling_l-&gt;<ref refid="classcop5536_1_1bp__node_1a90a56c05435eaed29592ccea0e8333b0" kindref="member">splitable</ref>())<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref>*<sp/>rp_<sp/>=<sp/>sibling_l-&gt;<ref refid="classcop5536_1_1bp__node_1a8db819103997a6e80e0f00558f596d07" kindref="member">split</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1aa976b5b194ebbd5d0a1542febc9578aa" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1aa976b5b194ebbd5d0a1542febc9578aa" kindref="member">key</ref><sp/>=<sp/>rp_-&gt;<ref refid="structcop5536_1_1rb__tree__node_1aa976b5b194ebbd5d0a1542febc9578aa" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1bp__node__i" kindref="compound">bp_node_i</ref>*<sp/>rpi<sp/>=<sp/>static_cast&lt;bp_node_i*&gt;(rp_-&gt;<ref refid="structcop5536_1_1rb__tree__node_1a75876fa1d1523c169440561c015767cf" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref><sp/>=<sp/>rpi-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;insert(tmp,<sp/>i-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref><sp/>+=<sp/>rpi-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref><sp/>=<sp/>rpi-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref><sp/>+=<sp/>rpi-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rpi-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rpi-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>rpi;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rp_-&gt;<ref refid="structcop5536_1_1rb__tree__node_1a75876fa1d1523c169440561c015767cf" kindref="member">data</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>rp_;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1bp__node__i" kindref="compound">bp_node_i</ref>*<sp/>sibling_i<sp/>=<sp/>static_cast&lt;bp_node_i*&gt;(sibling_l);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sibling_i-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;insert(ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1aa976b5b194ebbd5d0a1542febc9578aa" kindref="member">key</ref>,<sp/>i-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;delete_key(ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1aa976b5b194ebbd5d0a1542febc9578aa" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>this-&gt;children<sp/>==<sp/>nullptr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>must<sp/>be<sp/>the<sp/>first<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="classcop5536_1_1bp__tree_1a424febb6a1d7ce333d8713f43d9462a5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__tree_1a424febb6a1d7ce333d8713f43d9462a5" kindref="member">bp_tree::remove</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(root-&gt;<ref refid="classcop5536_1_1bp__node_1ac0b53957714577d62b9452b8b5611182" kindref="member">is_leaf</ref>())<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1bp__node__l" kindref="compound">bp_node_l</ref>*<sp/>l_node<sp/>=<sp/>static_cast&lt;bp_node_l*&gt;(root);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>l_node-&gt;<ref refid="classcop5536_1_1bp__node__l_1a24a25b19ac46487f9654089e96fae604" kindref="member">data</ref>-&gt;<ref refid="classcop5536_1_1rb__tree_1a25a915e3c06cbfb3d09c3ffd4fb26f82" kindref="member">delete_key</ref>(key);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1bp__node__i" kindref="compound">bp_node_i</ref>*<sp/>i_node<sp/>=<sp/>static_cast&lt;bp_node_i*&gt;(root);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref>*<sp/>ins_to<sp/>=<sp/>i_node-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;search_eq_or_gt(key);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcop5536_1_1bp__node" kindref="compound">bp_node</ref>*<sp/>key_node;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1aa976b5b194ebbd5d0a1542febc9578aa" kindref="member">key</ref><sp/>&gt;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>key_node<sp/>=<sp/>i_node-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ins_to-&gt;data<sp/>=<sp/>i_node-&gt;first_child;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>key_node<sp/>=<sp/>ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1a75876fa1d1523c169440561c015767cf" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>child_is_empty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>std::future&lt;bool&gt;<sp/>fu<sp/>=<sp/>std::async(std::launch::async,<sp/>&amp;<ref refid="classcop5536_1_1bp__node_1af3e0eedf3446b6f881f334cc57d42c05" kindref="member">bp_node::remove</ref>,<sp/>key_node,<sp/>key);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>child_is_empty<sp/>=<sp/>fu.get();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(child_is_empty)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="classcop5536_1_1bp__node__i_1ac3d6bfcfb39e3030b523f8276f19bec9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__i_1ac3d6bfcfb39e3030b523f8276f19bec9" kindref="member">bp_node_i::search</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><ref refid="structcop5536_1_1rb__tree__node" kindref="compound">rb_tree_node&lt;int, bp_node*&gt;</ref><sp/>*ins_to<sp/>=<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;search_eq_or_gt(key);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1aa976b5b194ebbd5d0a1542febc9578aa" kindref="member">key</ref><sp/>&gt;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>-&gt;<ref refid="classcop5536_1_1bp__node_1a0f2a0e453f61fdd8965329ecd00f9cd3" kindref="member">search</ref>(key);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ins_to-&gt;<ref refid="structcop5536_1_1rb__tree__node_1a75876fa1d1523c169440561c015767cf" kindref="member">data</ref>-&gt;search(key);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal">};</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="classcop5536_1_1bp__node__l_1aaef458660fc157dbe47705075a2ea49f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__l_1aaef458660fc157dbe47705075a2ea49f" kindref="member">bp_node_l::search</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;searching<sp/>in<sp/>leaf&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__l_1a24a25b19ac46487f9654089e96fae604" kindref="member">data</ref>-&gt;<ref refid="classcop5536_1_1rb__tree_1a5ce2bf3088e27c69862dd9a05c87613f" kindref="member">search</ref>(key);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="448"><highlight class="normal">};</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451" refid="classcop5536_1_1bp__node__l_1a85543d75788128dba421155d524be082" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;*<sp/><ref refid="classcop5536_1_1bp__node__l_1aaef458660fc157dbe47705075a2ea49f" kindref="member">bp_node_l::search</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>low,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>high)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;search<sp/>in<sp/>leaf&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>std::vector&lt;rb_tree_node&lt;int,<sp/>float&gt;*&gt;*<sp/>rb_nodes<sp/>=<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__l_1a24a25b19ac46487f9654089e96fae604" kindref="member">data</ref>-&gt;<ref refid="classcop5536_1_1rb__tree_1a222eb0ee0c9d1e02efd9192edb04a990" kindref="member">search_range</ref>(low,<sp/>high);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;*<sp/>rs_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>node<sp/>:<sp/>*rb_nodes)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>rs_-&gt;push_back(node-&gt;data);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rs_;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>rb_nodes;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462" refid="classcop5536_1_1bp__node__i_1a2f84bd7bdd54b0d33876b661ae864c8a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;*<sp/><ref refid="classcop5536_1_1bp__node__i_1ac3d6bfcfb39e3030b523f8276f19bec9" kindref="member">bp_node_i::search</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>low,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>high)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;search<sp/>in<sp/>first<sp/>child&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;*<sp/>rs_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;();</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fc<sp/>=<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>-&gt;<ref refid="classcop5536_1_1bp__node_1a0f2a0e453f61fdd8965329ecd00f9cd3" kindref="member">search</ref>(low,<sp/>high);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>rs_-&gt;insert(rs_-&gt;end(),<sp/>fc-&gt;begin(),<sp/>fc-&gt;end());</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fc;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;search<sp/>in<sp/>children&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rb_nodes<sp/>=<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;search_range(low,<sp/>high);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>it:<sp/>*rb_nodes)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;search<sp/>in<sp/>internal<sp/>with<sp/>key<sp/>&quot;<sp/>&lt;&lt;<sp/>it-&gt;key<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rs__<sp/>=<sp/>it-&gt;data-&gt;search(low,<sp/>high);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>rs_-&gt;insert(rs_-&gt;end(),<sp/>rs__-&gt;begin(),<sp/>rs__-&gt;end());</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>rs__;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rs_;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>rb_nodes;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="classcop5536_1_1bp__tree_1ab19cba7e122848174579357585b43cb4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__tree_1ab19cba7e122848174579357585b43cb4" kindref="member">bp_tree::search</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;output<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Null&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s_<sp/>=<sp/>root-&gt;<ref refid="classcop5536_1_1bp__node_1a0f2a0e453f61fdd8965329ecd00f9cd3" kindref="member">search</ref>(key);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;output<sp/>&lt;&lt;<sp/>s_<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;output<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Null&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494" refid="classcop5536_1_1bp__tree_1afdd6e5e9febb1a2e60d993efb8aed048" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__tree_1ab19cba7e122848174579357585b43cb4" kindref="member">bp_tree::search</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>low,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>high)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;output<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Null&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::vector&lt;float&gt;*<sp/>rs_<sp/>=<sp/>new<sp/>std::vector&lt;float&gt;();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rs_<sp/>=<sp/>root-&gt;<ref refid="classcop5536_1_1bp__node_1a0f2a0e453f61fdd8965329ecd00f9cd3" kindref="member">search</ref>(low,<sp/>high);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>std::ostringstream<sp/>ss;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r:*rs_)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>r<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>this-&gt;output<sp/>&lt;&lt;<sp/>ss.str()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="classcop5536_1_1bp__tree_1a5098bb9c72750e80252595a707ad2470" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__tree_1a5098bb9c72750e80252595a707ad2470" kindref="member">bp_tree::print</ref>()<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(root<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;empty<sp/>bp<sp/>tree&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>root-&gt;<ref refid="classcop5536_1_1bp__node_1a6f12a3668cc105cc1e7d87e1debafa82" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514" refid="classcop5536_1_1bp__node__i_1a57d4700fe3de996b564bde81197907f2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__i_1a57d4700fe3de996b564bde81197907f2" kindref="member">bp_node_i::print</ref>()<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>std::cout&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;idx:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>keys;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;get_keys(keys);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>key:<sp/>keys)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>key<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ns:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref>;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a01e9ecddf0de428590924058d4a395b7" kindref="member">first_child</ref>-&gt;<ref refid="classcop5536_1_1bp__node_1a6f12a3668cc105cc1e7d87e1debafa82" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rb_nodes<sp/>=<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__i_1a84be8cb1326c5cf21f73859fee0f78d0" kindref="member">children</ref>-&gt;search_range(-10000000,<sp/>10000000);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;it<sp/>:<sp/>*rb_nodes)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>it-&gt;data-&gt;print();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;+++++++++++&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532" refid="classcop5536_1_1bp__node__l_1a12982ece3c311e3ccf653a97d842f39f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcop5536_1_1bp__node__l_1a12982ece3c311e3ccf653a97d842f39f" kindref="member">bp_node_l::print</ref>()<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;l:<sp/>ns=&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>this-&gt;<ref refid="classcop5536_1_1bp__node_1a011a8dee13e3446bee783dd9afc33c11" kindref="member">node_size</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classcop5536_1_1bp__node__l_1a24a25b19ac46487f9654089e96fae604" kindref="member">data</ref>-&gt;<ref refid="classcop5536_1_1rb__tree_1ae549cd20bdc369bf29acfc543ecdb3a5" kindref="member">print_tree</ref>();</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>auto<sp/>it<sp/>=<sp/>this-&gt;data-&gt;nth(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>while(it)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>it-&gt;key<sp/>&lt;&lt;<sp/>&quot;:<sp/>&quot;<sp/>&lt;&lt;<sp/>it-&gt;data<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>it<sp/>=<sp/>this-&gt;data-&gt;next_(it);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;;<sp/><sp/>&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cop5536</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BP_TREE_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="bp_tree.h"/>
  </compounddef>
</doxygen>
